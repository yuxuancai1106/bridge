rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(uid) {
      return request.auth.uid == uid;
    }

    function isValidUser() {
      return isAuthenticated() &&
             request.resource.data.email is string &&
             request.resource.data.name is string &&
             request.resource.data.role in ['mentor', 'seeker'];
    }

    // Users collection
    match /users/{userId} {
      // Anyone can read user profiles (for matching)
      allow read: if isAuthenticated();

      // Users can create their own profile
      allow create: if isAuthenticated() &&
                       isOwner(userId) &&
                       isValidUser();

      // Users can update their own profile
      allow update: if isAuthenticated() &&
                       isOwner(userId);

      // Users can delete their own profile
      allow delete: if isAuthenticated() &&
                       isOwner(userId);
    }

    // Matches collection
    match /matches/{matchId} {
      // Users can read matches that involve them
      allow read: if isAuthenticated() &&
                     (resource.data.user1Id == request.auth.uid ||
                      resource.data.user2Id == request.auth.uid);

      // Only backend/cloud functions can create matches
      allow create: if false;

      // Users cannot update or delete matches
      allow update, delete: if false;
    }

    // Conversations collection
    match /conversations/{conversationId} {
      // Users can read conversations they're part of
      allow read: if isAuthenticated() &&
                     request.auth.uid in resource.data.participants;

      // Users can create conversations
      allow create: if isAuthenticated() &&
                       request.auth.uid in request.resource.data.participants &&
                       request.resource.data.participants.size() == 2;

      // Users can update conversations they're part of
      allow update: if isAuthenticated() &&
                       request.auth.uid in resource.data.participants;

      // Users cannot delete conversations
      allow delete: if false;

      // Messages subcollection
      match /messages/{messageId} {
        // Users can read messages in conversations they're part of
        allow read: if isAuthenticated() &&
                       request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;

        // Users can create messages in conversations they're part of
        allow create: if isAuthenticated() &&
                         request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants &&
                         request.resource.data.senderId == request.auth.uid;

        // Users cannot update or delete messages
        allow update, delete: if false;
      }
    }

    // Reports collection
    match /reports/{reportId} {
      // Only admins can read reports
      allow read: if false;

      // Authenticated users can create reports
      allow create: if isAuthenticated() &&
                       request.resource.data.reporterId == request.auth.uid;

      // Users cannot update or delete reports
      allow update, delete: if false;
    }

    // Safety analysis collection (for moderation)
    match /safetyAnalysis/{analysisId} {
      // Only backend can read/write
      allow read, write: if false;
    }
  }
}
